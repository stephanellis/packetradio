#############################################################
#                                                           #
#               Configuration file for Dire Wolf            #
#                                                           #
#############################################################
#
# Consult the User Guide for more details on configuration options.
#
#
# These are the most likely settings you might change:
#
#	(1)   	MYCALL 	-  call sign and SSID for your station.
#
#			Look for lines starting with MYCALL and 
#			change NOCALL to your own.
#
#
#	(2)	PBEACON	-  enable position beaconing.
#
#			Look for lines starting with PBEACON and 
#			modify for your call, location, etc.
#
#
#	(3)	DIGIPEATER  -  configure digipeating rules.
#
#			Look for lines starting with DIGIPEATER.
#			Most people will probably use the first example.
#			Just remove the "#" from the start of the line
#			to enable it.
#
#
#	(4)	IGSERVER, IGLOGIN  - IGate server and login
#
#			Configure an IGate client to relay messages between 
#			radio and internet servers.
#
#
# The default location is "direwolf.conf" in the current working directory.
# On Linux, the user's home directory will also be searched.
# An alternate configuration file location can be specified with the "-c" command line option.  
#
# As you probably guessed by now, # indicates a comment line.
#
# Remove the # at the beginning of a line if you want to use a sample
# configuration that is currently commented out.
#
# Commands are a keyword followed by parameters.
#
# Command key words are case insensitive.  i.e. upper and lower case are equivalent.
#
# Command parameters are generally case sensitive.  i.e. upper and lower case are different.
#
# Example:  The next two are equivalent
#
#	PTT /dev/ttyS0 RTS
#	ptt /dev/ttyS0 RTS
#
# But this not equivalent because device names are case sensitive.
#
#	PTT /dev/TTYs0 RTS
#


#############################################################
#                                                           #
#               AUDIO DEVICE PROPERTIES                     #
#                                                           #
#############################################################

#
# Many people will simply use the default sound device.
# Some might want to use an alternative device by chosing it here.
#
# When the Windows version starts up, it displays something like 
# this with the available sound devices and capabilities:
#
#	Available audio input devices for receive (*=selected):
#	  0: Microphone (Realtek High Defini
#	  1: Microphone (Bluetooth SCO Audio
#	  2: Microphone (Bluetooth AV Audio)
#	  3: Microphone (USB PnP Sound Devic
#	Available audio output devices for transmit (*=selected):
#	  0: Speakers (Realtek High Definiti
#	  1: Speakers (Bluetooth SCO Audio)
#	  2: Realtek Digital Output (Realtek
#	  3: Realtek Digital Output(Optical)
#	  4: Speakers (Bluetooth AV Audio)
#	  5: Speakers (USB PnP Sound Device)

# Example: To use the USB Audio, use a command like this with
# the input and output device numbers.  (Remove the # comment character.)

#ADEVICE  3 5 

# The position in the list can change when devices (e.g. USB) are added and removed.
# You can also specify devices by using part of the name.
# Here is an example of specifying the USB Audio device.
# This is case-sensitive.  Upper and lower case are not treated the same.

#ADEVICE USB


# Linux ALSA is complicated.  See User Guide for discussion.
# To use something other than the default, generally use plughw
# and a card number reported by "arecord -l" command.  Examples:

# ADEVICE  plughw:CARD=Device,DEV=0
# ADEVICE  plughw:0,0

# Starting with version 1.0, you can also use "-" or "stdin" to 
# pipe stdout from some other application such as a software defined
# radio.  You can also specify "UDP:" and an optional port for input.
# Something different must be specified for output.

# ADEVICE - plughw:1,0
# ADEVICE UDP:7355 default

#
# This is the sound card audio sample rate.
# The default is 44100.  Other standard values are 22050 or 11025.
# 
# Change this only if your computer can't keep up.
# A lower rate means lower CPU demands but performance will be degraded.
#

ARATE 44100


#
# Number of audio channels.  1 or 2.
# If you specify 2, it is possible to attach two different transceivers
# and receive from both simultaneously.
#

ACHANNELS 1

# Use this instead if you want to use two transceivers.

#ACHANNELS 2


#############################################################
#                                                           #
#               CHANNEL 0 PROPERTIES                        #
#                                                           #
#############################################################

CHANNEL 0

#
# The following will apply to the first or only channel.
# When two channels are used, this is the left audio channel.
#


#
# Station identifier for this channel.
# Multiple channels can have the same or different names.
#
# It can be up to 6 letters and digits with an optional ssid.
# The APRS specification requires that it be upper case.
#
# Example (don't use this unless you are me):  MYCALL	WB2OSZ-5
#

MYCALL KG5ICZ-1

#
# VHF FM operation normally uses 1200 baud data with AFSK tones of 1200 and 2200 Hz.
# 

MODEM 1200 1200 2200 

#
# 200 Hz shift is normally used for 300 baud HF SSB operation.
#
# Note that if you change the tones here, you will need to adjust
# your tuning dial accordingly to get the same transmitted frequencies.
#
# In the second example, we have 7 demodulators spaced 30 Hz apart
# to capture signals that are off frequency.
# If you run out of CPU power, drop the audio sample rate down to 22050.

#MODEM 300 1600 1800
#MODEM 300 1600 1800 7 30

# 
# 9600 baud doesn't use AFSK so no tones are listed.
#

#MODEM 9600


# 
# If not using a VOX circuit, the transmitter Push to Talk (PTT) 
# control is usually wired to a serial port with a suitable interface circuit.  
# DON'T connect it directly!
#
# For the PTT command, specify the device and either RTS or DTR.
# RTS or DTR may be preceded by "-" to invert the signal.
#

#PTT COM1 RTS
#PTT COM1 -DTR
#PTT /dev/ttyUSB0 RTS

#
# On Linux, you can also use general purpose I/O pins if
# your system is configured for user access to them. 
# This would apply mostly to microprocessor boards, not a regular PC.
# See separate Raspberry Pi document for more details.
# The number may be preceded by "-" to invert the signal.
#

#PTT GPIO 25


#
# After turning on transmitter, send "flag" characters for 
# TXDELAY * 10 milliseconds for transmitter to stabilize before 
# sending data.   300 milliseconds is a good default.
#

TXDELAY 30

#
# Keep transmitting for TXTAIL * 10 milliseconds after sending
# the data.  This is needed to avoid dropping PTT too soon and 
# chopping of the end of the data because we don't have
# precise control of when the sound will actually get out.
#

TXTAIL 10


#############################################################
#                                                           #
#               CHANNEL 1 PROPERTIES                        #
#                                                           #
#############################################################

CHANNEL 1

#
# The following will apply to the second (right) channel if ACHANNELS is 2.
#

#
# The two radio channels can have the same or different station identifiers.
#
#
# Example (don't use this unless you are me):  MYCALL	WB2OSZ-5
#

MYCALL NOCALL

MODEM 1200 1200 2200 

#
# For this example, we use the same serial port for both
# transmitters.   RTS for channel 0 and DTR for channel 1.
#

#PTT COM1 DTR

TXDELAY 30
TXTAIL 10



#############################################################
#                                                           #
#               VIRTUAL TNC SERVER PROPERTIES               #
#                                                           #
#############################################################

#
# Dire Wolf acts as a virtual TNC and can communicate with
# two different protocols:
#	- the “AGW TCPIP Socket Interface” - default port 8000
#	- KISS TNC via serial port
#	- KISS protocol over TCP socket - default port 8001
#
# See descriptions of AGWPORT, KISSPORT, and NULLMODEM in the
# User Guide for more details.
#

AGWPORT 8000
KISSPORT 8001

#
# Some applications are designed to operate with only a physical
# TNC attached to a serial port.  For these, we provide a virtual serial
# port ("pseudo terminal" in Linux) that appears to be connected to a TNC.
#
# Linux:
# 	Linux applications can often specify "/tmp/kisstnc"
# 	for the serial port name.  Behind the scenes, Dire Wolf 
# 	creates a pseudo terminal.  Unfortunately we can't specify the name
# 	and we wouldn't want to reconfigure the application each time.
# 	To get around this, /tmp/kisstnc is a symbolic link to the
# 	non-constant pseudo terminal name.
#
# 	Use the -p command line option to enable this feature.
#
# Windows:
# 
#  	Microsoft Windows applications need a serial port
# 	name like COM1, COM2, COM3, or COM4.
#
# 	Take a look at the User Guide for instructions to set up
# 	two virtual serial ports named COM3 and COM4 connected by
# 	a null modem.
#
# 	Using the default configuration, Dire Wolf will connect to 
# 	COM3 and the client application will use COM4.
#
# 	Uncomment following line to use this feature.

#NULLMODEM COM3


#
# Version 0.6 adds a new feature where it is sometimes possible
# to recover frames with a bad FCS.  Several levels of effort
# are possible.  
#
#	0 [NONE] - Don't try to repair.
#	1 [SINGLE] - Attempt to fix single bit error.  (default)
#	2 [DOUBLE] - Also attempt to fix two adjacent bits.
#	3 [TRIPLE] - Also attempt to fix three adjacent bits.
#	4 [TWO_SEP] - Also attempt to fix two non-adjacent (separated) bits.
#

FIX_BITS 1

#	
#############################################################
#                                                           #
#               BEACONING PROPERTIES                        #
#                                                           #
#############################################################


#
# Beaconing is configured with these two commands:
#
#	PBEACON		- for a position report (usually yourself)
#	OBEACON		- for an object report (usually some other entity)
#
# Each has a series of keywords and values for options.  
# See User Guide for details.
#
# Example:
#
# This results in a broadcast once every 10 minutes.
# Every half hour, it can travel via two digipeater hops.
# The others are kept local.
#

#PBEACON delay=00:15 every=30 overlay=S symbol="digi" lat=42^37.14N long=071^20.83W power=50 height=20 gain=4 comment="Chelmsford MA" via=WIDE1-1,WIDE2-1 
#PBEACON delay=10:15 every=30 overlay=S symbol="digi" lat=42^37.14N long=071^20.83W power=50 height=20 gain=4 comment="Chelmsford MA"  
#PBEACON delay=20:15 every=30 overlay=S symbol="digi" lat=42^37.14N long=071^20.83W power=50 height=20 gain=4 comment="Chelmsford MA"  

#
# Modify this for your particular situation before removing 
# the # comment character from the beginning of the lines above.
# 


#############################################################
#                                                           #
#               DIGIPEATER PROPERTIES                       #
#                                                           #
#############################################################

#
# Digipeating is activated with commands of the form:
#
#	DIGIPEAT from-chan to-chan aliases wide [ preemptive ]
#
# where,
#
#	from-chan	is the channel where the packet is received.
#
#	to-chan		is the channel where the packet is to be re-transmitted.
#
#	aliases		is a pattern for digipeating ONCE.  Anything matching
#			this pattern is effectively treated like WIDE1-1.
#			'MYCALL' for the receiving channel is an implied
#			member of this list.
#
#	wide		is the pattern for normal WIDEn-N digipeating
#			where the ssid is decremented. 
#
#	preemptive	is the "preemptive" digipeating option.  See
#			User Guide for more details.
#
# Pattern matching uses "extended regular expressions."  Rather than listing 
# all the different possibilities (such as "WIDE3-3,WIDE4-4,WIDE5-5,WIDE6-6,WIDE7-7"),
# a pattern can be specified such as "^WIDE[34567]-[1-7]$".  This means:
#
#	^	beginning of call.  Without this, leading characters 
#		don't need to match and ZWIDE3-3 would end up matching.
#
#	WIDE	is an exact literal match of upper case letters W I D E.
#
#	[34567]	means ANY ONE of the characters listed.
#
#	-	is an exact literal match of the "-" character (when not
#		found inside of []).
#
# 	[1-7]	is an alternative form where we have a range of characters
#		rather than listing them all individually.
#
#	$	means end of call.  Without this, trailing characters don't
#		need to match.  As an example, we would end up matching 
#		WIDE3-15 besides WIDE3-1.
#
# Google "Extended Regular Expressions" for more information.
#

#
# If the first unused digipeater field, in the received packet,
# matches the first pattern, it is treated the same way you
# would expect WIDE1-1 to behave.
#
# The digipeater name is replaced by MYCALL of the destination channel.
#
# Example:	W1ABC>APRS,WIDE7-7
# Becomes:	W1ABC>APRS,WB2OSZ-5*
#
# In this example, we trap large values of N as recommended in 
# http://www.aprs.org/fix14439.html
#

#
# If not caught by the first pattern, see if it matches the second pattern.
#
# Matches will be processed with the usual WIDEn-N rules.
# 
# If N >= 2, the N value is decremented and MYCALL (of the destination
# 		channel) is inserted if enough room.
#
# Example:	W1ABC>APRS,WIDE2-2
# Becomes:	W1ABC>APRS,WB2OSZ-5*,WIDE2-1
#
# If N = 1, we don't want to keep WIDEn-0 in the digipeater list so
#		the station is replaced by MYCALL.
#
# Example:	W1ABC>APRS,W9XYZ*,WIDE2-1
# Becomes:	W1ABC>APRS,W9XYZ,WB2OSZ-5*
#

#-------------------------------------------------------
# ----------  Example 1:  Typical digipeater  ----------
#-------------------------------------------------------

#
# For most common situations, use something like this by removing
# the "#" from the beginning of the line.
# To disable digipeating, put # at the beginning of the line.
# 

# DIGIPEAT 0 0 ^WIDE[3-7]-[1-7]$|^TEST$ ^WIDE[12]-[12]$ TRACE




#############################################################
#                                                           #
#               INTERNET GATEWAY                            #
#                                                           #
#############################################################

# First you need to specify the name of a Tier 2 server.  
# The current preferred way is to use one of these regional rotate addresses:

#	noam.aprs2.net 		- for North America
#	soam.aprs2.net		- for South America
#	euro.aprs2.net		- for Europe and Africa
#	asia.aprs2.net 		- for Asia
#	aunz.aprs2.net		- for Oceania 

#IGSERVER noam.aprs2.net

# You also need to specify your login name and passcode. 
# Contact the author if you can't figure out how to generate the passcode.
 
#IGLOGIN WB2OSZ-5 123456

# That's all you need for a receive only IGate which relays
# messages from the local radio channel to the global servers.

# Some might want to send an IGate client position directly to a server
# without sending it over the air and relying on someone else to 
# forward it to an IGate server.  This is done by using sendto=IG rather
# than a radio channel number. Overlay R for receive only, T for two way.

#PBEACON sendto=IG delay=0:30 every=60:00 symbol="igate" overlay=R lat=42^37.14N long=071^20.83W 
#PBEACON sendto=IG delay=0:30 every=60:00 symbol="igate" overlay=T lat=42^37.14N long=071^20.83W 


# To relay messages from the Internet to radio, you need to add
# one more option with the transmit channel number and a VIA path.

#IGTXVIA 0 WIDE1-1

# You might want to apply a filter for what packets will be obtained from the server.
# Read about filters here:  http://www.aprs2.net/wiki/pmwiki.php/Main/FilterGuide
# Example:

#IGFILTER m/50 

# Finally, we don’t want to flood the radio channel.  
# The IGate function will limit the number of packets transmitted 
# during 1 minute and 5 minute intervals.   If a limit would 
# be exceeded, the packet is dropped and message is displayed in red.

IGTXLIMIT 6 10


#############################################################
#                                                           #
#               APRStt GATEWAY                              #
#                                                           #
#############################################################

#
# Dire Wolf can receive DTMF (commonly known as Touch Tone)
# messages and convert them to packet objects.
#
# See "APRStt-Implementation-Notes" document for details.
#

#
# Sample gateway configuration based on:
#
#	http://www.aprs.org/aprstt/aprstt-coding24.txt
#	http://www.aprs.org/aprs-jamboree-2013.html
#

# Define specific points.

TTPOINT  B01  37^55.37N  81^7.86W  			
TTPOINT  B7495088  42.605237  -71.34456		
TTPOINT  B934  42.605237  -71.34456			

TTPOINT B901  42.661279  -71.364452 
TTPOINT B902  42.660411  -71.364419 
TTPOINT B903  42.659046  -71.364452 
TTPOINT B904  42.657578  -71.364602 


# For location at given bearing and distance from starting point.

TTVECTOR  B5bbbddd  37^55.37N  81^7.86W  0.01  mi

# For location specified by x, y coordinates.

TTGRID   Byyyxxx    37^50.00N  81^00.00W  37^59.99N  81^09.99W   

# UTM location for Lowell-Dracut-Tyngsborough State Forest.

TTUTM  B6xxxyyy  19T  10  300000  4720000



# Location for the corral.

TTCORRAL   37^55.50N  81^7.00W  0^0.02N

# Compact messages - Fixed locations xx and object yyy where 
#   	Object numbers 100 – 199	= bicycle	
#	Object numbers 200 – 299	= fire truck
#	Others				= dog

TTMACRO  xx1yy  B9xx*AB166*AA2B4C5B3B0A1yy
TTMACRO  xx2yy  B9xx*AB170*AA3C4C7C3B0A2yy
TTMACRO  xxyyy  B9xx*AB180*AA3A6C4A0Ayyy

TTMACRO  z  Cz

# Transmit object reports on channel 0 with this header.

#TTOBJ 0 WB2OSZ-5>APDW10

# Advertise gateway position with beacon.

# OBEACON DELAY=0:15 EVERY=10:00 VIA=WIDE1-1 OBJNAME=WB2OSZ-tt SYMBOL=APRStt LAT=42^37.14N LONG=71^20.83W COMMENT="APRStt Gateway"  


